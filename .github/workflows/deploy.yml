name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: vps

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug Secrets
        run: |
          echo "Checking if VPS_HOST is set..."
          if [ -n "${{ secrets.VPS_HOST }}" ]; then
            echo "VPS_HOST is set"
          else
            echo "VPS_HOST is NOT set"
          fi

          echo "Checking if VPS_SSH_KEY is set..."
          if [ -n "${{ secrets.VPS_SSH_KEY }}" ]; then
            echo "VPS_SSH_KEY is set"
          else
            echo "VPS_SSH_KEY is NOT set"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: deploy
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            # Update system and install required packages
            sudo apt-get update
            sudo apt-get install -y nginx certbot python3-certbot-nginx

            # Create app directory if it doesn't exist
            sudo mkdir -p /var/www/app
            cd /var/www/app

            # Set proper permissions
            sudo chown -R deploy:deploy .
            git config --global --add safe.directory /var/www/app

            # Pull latest changes
            git pull origin main

            # Setup Nginx configuration
            sudo cp nginx.conf /etc/nginx/sites-available/hatkom.morar.dev
            sudo ln -sf /etc/nginx/sites-available/hatkom.morar.dev /etc/nginx/sites-enabled/

            # Test Nginx configuration
            sudo nginx -t

            # Restart Nginx if configuration is valid
            if [ $? -eq 0 ]; then
              sudo systemctl restart nginx
            else
              echo "Nginx configuration test failed"
              exit 1
            fi

            # Setup SSL certificate if not already set up
            if [ ! -f /etc/letsencrypt/live/hatkom.morar.dev/fullchain.pem ]; then
              sudo certbot --nginx -d hatkom.morar.dev --non-interactive --agree-tos --email ${{ secrets.ADMIN_EMAIL }}
            else
              sudo certbot renew --quiet
            fi

            # Restart Docker containers
            docker-compose down
            docker-compose up -d --build
